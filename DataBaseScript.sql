-- MySQL Script generated by MySQL Workbench
-- Thu Mar 10 16:19:58 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema TaskManagement
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema TaskManagement
-- -----------------------------------------------------


-- All the stored procedures are added in MYSQL workbench


CREATE SCHEMA IF NOT EXISTS `Task_Management` DEFAULT CHARACTER SET utf8 ;
USE `Task_Management` ;

-- -----------------------------------------------------
-- Table `TaskManagement`.`Task`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Task_Management`.`Task` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Title` VARCHAR(45) NOT NULL,
  `Description` VARCHAR(200) NOT NULL,
  `StartDate` DATETIME NOT NULL,
  `FinishDate` DATETIME NOT NULL,
  `Priority` INT NOT NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TaskManagement`.`Repository`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Task_Management`.`Repository` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  `TaskId` INT NOT NULL,
  PRIMARY KEY (`Id`),
  INDEX `Id_idx` (`TaskId` ASC) VISIBLE,
  CONSTRAINT `FK_Repository_TaskId`
    FOREIGN KEY (`TaskId`)
    REFERENCES `Task_Management`.`Task` (`Id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TaskManagement`.`Worker`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Task_Management`.`Worker` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  `Surname` VARCHAR(45) NOT NULL,
  `Salary` DECIMAL(5,2) NOT NULL,
  `Position` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TaskManagement`.`Working`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Task_Management`.`Working` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `RepositoryId` INT NOT NULL,
  `WorkerId` INT NOT NULL,
  PRIMARY KEY (`Id`),
  INDEX `Id_idx` (`RepositoryId` ASC) VISIBLE,
  INDEX `Id_idx1` (`WorkerId` ASC) VISIBLE,
  CONSTRAINT `FK_Working_RepositoryId`
    FOREIGN KEY (`RepositoryId`)
    REFERENCES `Task_Management`.`Repository` (`Id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_Working_WorkerId`
    FOREIGN KEY (`WorkerId`)
    REFERENCES `Task_Management`.`Worker` (`Id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TaskManagement`.`Customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Task_Management`.`Customer` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `CompanyName` VARCHAR(45) NOT NULL,
  `Description` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TaskManagement`.`Team`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Task_Management`.`Team` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  `Rating` INT NOT NULL,
  `WorkerId` INT NOT NULL,
  `CustomerId` INT NOT NULL,
  PRIMARY KEY (`Id`),
  INDEX `Id_idx` (`WorkerId` ASC) VISIBLE,
  INDEX `Id_idx1` (`CustomerId` ASC) VISIBLE,
  CONSTRAINT `FK_Team_WorkerId`
    FOREIGN KEY (`WorkerId`)
    REFERENCES `Task_Management`.`Worker` (`Id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_Team_CustomerId`
    FOREIGN KEY (`CustomerId`)
    REFERENCES `Task_Management`.`Customer` (`Id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
